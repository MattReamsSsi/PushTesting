{"version":3,"sources":["InfoLabel.jsx","CustomTimeline.jsx","generate-fake-data.js","index.js"],"names":["item","group","time","date","moment","label","title","style","position","left","bottom","background","color","padding","fontSize","borderRadius","zIndex","format","keys","groupIdKey","groupTitleKey","groupRightTitleKey","itemIdKey","itemTitleKey","itemDivTitleKey","itemGroupKey","itemTimeStartKey","itemTimeEndKey","groupLabelKey","App","props","handleItemMove","itemId","dragTime","newGroupOrder","state","items","groups","setState","map","id","Object","assign","start","end","draggedItem","undefined","console","log","handleItemResize","edge","handleItemDrag","eventType","find","i","groupCount","itemCount","daysInPast","randomSeed","Math","floor","random","push","faker","name","firstName","rightTitle","lastName","bgColor","randomColor","luminosity","seed","startDate","recent","valueOf","startValue","endValue","number","min","max","length","hacker","phrase","className","day","itemProps","sort","a","b","generateFakeData","defaultTimeStart","startOf","toDate","defaultTimeEnd","add","this","Fragment","fullUpdate","itemTouchSendsClick","stackItems","itemHeightRatio","canMove","canResize","onItemMove","onItemResize","onItemDrag","InfoLabel","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.93ec6414.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default ({ item, group, time }) => {\r\n  const date = moment(time, \"x\");\r\n  const label = group ? group.title : \"\";\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        left: 100,\r\n        bottom: 50,\r\n        background: \"rgba(0, 0, 0, 0.5)\",\r\n        color: \"white\",\r\n        padding: 10,\r\n\r\n        fontSize: 20,\r\n        borderRadius: 5,\r\n        zIndex: 85,\r\n      }}\r\n    >\r\n      {`${date.format(\"LLL\")}, ${label}`}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport Timeline from \"react-calendar-timeline\";\r\nimport InfoLabel from \"./InfoLabel\";\r\nimport generateFakeData from \"./generate-fake-data\";\r\n\r\nvar keys = {\r\n  groupIdKey: \"id\",\r\n  groupTitleKey: \"title\",\r\n  groupRightTitleKey: \"rightTitle\",\r\n  itemIdKey: \"id\",\r\n  itemTitleKey: \"title\",\r\n  itemDivTitleKey: \"title\",\r\n  itemGroupKey: \"group\",\r\n  itemTimeStartKey: \"start\",\r\n  itemTimeEndKey: \"end\",\r\n  groupLabelKey: \"title\",\r\n};\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { groups, items } = generateFakeData();\r\n    const defaultTimeStart = moment().startOf(\"day\").toDate();\r\n    const defaultTimeEnd = moment().startOf(\"day\").add(1, \"day\").toDate();\r\n\r\n    this.state = {\r\n      groups,\r\n      items,\r\n      defaultTimeStart,\r\n      defaultTimeEnd,\r\n      draggedItem: undefined,\r\n    };\r\n  }\r\n\r\n  handleItemMove = (itemId, dragTime, newGroupOrder) => {\r\n    const { items, groups } = this.state;\r\n\r\n    const group = groups[newGroupOrder];\r\n\r\n    this.setState({\r\n      items: items.map((item) =>\r\n        item.id === itemId\r\n          ? Object.assign({}, item, {\r\n              start: dragTime,\r\n              end: dragTime + (item.end - item.start),\r\n              group: group.id,\r\n            })\r\n          : item\r\n      ),\r\n      draggedItem: undefined,\r\n    });\r\n\r\n    console.log(\"Moved\", itemId, dragTime, newGroupOrder);\r\n  };\r\n\r\n  handleItemResize = (itemId, time, edge) => {\r\n    const { items } = this.state;\r\n\r\n    this.setState({\r\n      items: items.map((item) =>\r\n        item.id === itemId\r\n          ? Object.assign({}, item, {\r\n              start: edge === \"left\" ? time : item.start,\r\n              end: edge === \"left\" ? item.end : time,\r\n            })\r\n          : item\r\n      ),\r\n      draggedItem: undefined,\r\n    });\r\n\r\n    console.log(\"Resized\", itemId, time, edge);\r\n  };\r\n\r\n  handleItemDrag = ({ eventType, itemId, time, edge, newGroupOrder }) => {\r\n    let item = this.state.draggedItem ? this.state.draggedItem.item : undefined;\r\n    if (!item) {\r\n      item = this.state.items.find((i) => i.id === itemId);\r\n    }\r\n    this.setState({\r\n      draggedItem: {\r\n        item: item,\r\n        group: this.state.groups[newGroupOrder],\r\n        time,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { groups, items, defaultTimeStart, defaultTimeEnd } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Timeline\r\n          groups={groups}\r\n          items={items}\r\n          keys={keys}\r\n          fullUpdate\r\n          itemTouchSendsClick={false}\r\n          stackItems\r\n          itemHeightRatio={0.75}\r\n          canMove={true}\r\n          canResize={\"both\"}\r\n          defaultTimeStart={defaultTimeStart}\r\n          defaultTimeEnd={defaultTimeEnd}\r\n          onItemMove={this.handleItemMove}\r\n          onItemResize={this.handleItemResize}\r\n          onItemDrag={this.handleItemDrag}\r\n        />\r\n        {this.state.draggedItem && (\r\n          <InfoLabel\r\n            item={this.state.draggedItem.item}\r\n            group={this.state.draggedItem.group}\r\n            time={this.state.draggedItem.time}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import faker from \"faker\";\r\nimport randomColor from \"randomcolor\";\r\nimport moment from \"moment\";\r\n\r\nexport default function (groupCount = 30, itemCount = 1000, daysInPast = 30) {\r\n  let randomSeed = Math.floor(Math.random() * 1000);\r\n  let groups = [];\r\n  for (let i = 0; i < groupCount; i++) {\r\n    groups.push({\r\n      id: `${i + 1}`,\r\n      title: faker.name.firstName(),\r\n      rightTitle: faker.name.lastName(),\r\n      bgColor: randomColor({ luminosity: \"light\", seed: randomSeed + i }),\r\n    });\r\n  }\r\n\r\n  let items = [];\r\n  for (let i = 0; i < itemCount; i++) {\r\n    const startDate =\r\n      faker.date.recent(daysInPast).valueOf() + daysInPast * 0.3 * 86400 * 1000;\r\n    const startValue =\r\n      Math.floor(moment(startDate).valueOf() / 10000000) * 10000000;\r\n    const endValue = moment(\r\n      startDate + faker.random.number({ min: 2, max: 20 }) * 15 * 60 * 1000\r\n    ).valueOf();\r\n\r\n    items.push({\r\n      id: i + \"\",\r\n      group: faker.random.number({ min: 1, max: groups.length }) + \"\",\r\n      title: faker.hacker.phrase(),\r\n      start: startValue,\r\n      end: endValue,\r\n      // canMove: startValue > new Date().getTime(),\r\n      // canResize: 'both',\r\n      className:\r\n        moment(startDate).day() === 6 || moment(startDate).day() === 0\r\n          ? \"item-weekend\"\r\n          : \"\",\r\n      itemProps: {\r\n        \"data-tip\": faker.hacker.phrase(),\r\n      },\r\n    });\r\n  }\r\n\r\n  items = items.sort((a, b) => b - a);\r\n\r\n  return { groups, items };\r\n}\r\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Timeline from \"react-calendar-timeline\";\n// // make sure you include the timeline stylesheet or the timeline will not be styled\n// import \"react-calendar-timeline/lib/Timeline.css\";\n// import moment from \"moment\";\n\n// const groups = [\n//   { id: 1, title: \"group 1\" },\n//   { id: 2, title: \"group 2\" },\n// ];\n\n// const items = [\n//   {\n//     id: 1,\n//     group: 1,\n//     title: \"item 1\",\n//     start_time: moment(),\n//     end_time: moment().add(1, \"hour\"),\n//   },\n//   {\n//     id: 2,\n//     group: 2,\n//     title: \"item 2\",\n//     start_time: moment().add(-0.5, \"hour\"),\n//     end_time: moment().add(0.5, \"hour\"),\n//   },\n//   {\n//     id: 3,\n//     group: 1,\n//     title: \"item 3\",\n//     start_time: moment().add(2, \"hour\"),\n//     end_time: moment().add(3, \"hour\"),\n//   },\n// ];\n\n// ReactDOM.render(\n//   <div>\n//     Rendered by react!\n//     <Timeline\n//       groups={groups}\n//       items={items}\n//       defaultTimeStart={moment().add(-12, \"hour\")}\n//       defaultTimeEnd={moment().add(12, \"hour\")}\n//     />\n//   </div>,\n//   document.getElementById(\"root\")\n// );\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport CustomTimeline from \"./CustomTimeline\";\nimport \"react-calendar-timeline/lib/Timeline.css\";\nimport \"./style.css\";\nconst App = () => (\n  <div>\n    <CustomTimeline />\n  </div>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}